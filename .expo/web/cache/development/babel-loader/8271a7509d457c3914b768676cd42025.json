{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nexport default function Button(_ref) {\n  var style = _ref.style,\n      title = _ref.title,\n      onPress = _ref.onPress,\n      titleStyle = _ref.titleStyle,\n      loading = _ref.loading;\n  return React.createElement(TouchableOpacity, {\n    disabled: loading,\n    onPress: onPress,\n    style: _objectSpread({\n      width: '90%',\n      height: 48,\n      backgroundColor: color.white,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 25\n    }, style)\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: color.primary,\n    size: 'small'\n  }) : React.createElement(Text, {\n    style: _objectSpread(_objectSpread({\n      color: color.primary,\n      fontSize: 20\n    }, GlobalStyles.bold_text), titleStyle)\n  }, title));\n}","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/components/Button/index.js"],"names":["React","color","GlobalStyles","Button","style","title","onPress","titleStyle","loading","width","height","backgroundColor","white","justifyContent","alignItems","borderRadius","primary","fontSize","bold_text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,MAAT,OAAgE;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC3E,SACI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEA,OAA5B;AAAqC,IAAA,OAAO,EAAEF,OAA9C;AAAuD,IAAA,KAAK;AAAIG,MAAAA,KAAK,EAAE,KAAX;AAAkBC,MAAAA,MAAM,EAAE,EAA1B;AAA8BC,MAAAA,eAAe,EAAEV,KAAK,CAACW,KAArD;AAA4DC,MAAAA,cAAc,EAAE,QAA5E;AAAsFC,MAAAA,UAAU,EAAE,QAAlG;AAA4GC,MAAAA,YAAY,EAAE;AAA1H,OAAiIX,KAAjI;AAA5D,KACKI,OAAO,GAAG,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEP,KAAK,CAACe,OAAhC;AAAyC,IAAA,IAAI,EAAE;AAA/C,IAAH,GAAgE,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAIf,MAAAA,KAAK,EAAEA,KAAK,CAACe,OAAjB;AAA0BC,MAAAA,QAAQ,EAAE;AAApC,OAA2Cf,YAAY,CAACgB,SAAxD,GAAsEX,UAAtE;AAAX,KAAgGF,KAAhG,CAD5E,CADJ;AAKH","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text, ActivityIndicator } from 'react-native'\nimport { color } from '../../utils/color';\nimport { GlobalStyles } from '../../utils/globalStyles';\n\nexport default function Button({ style, title, onPress, titleStyle, loading }) {\n    return (\n        <TouchableOpacity disabled={loading} onPress={onPress} style={{ width: '90%', height: 48, backgroundColor: color.white, justifyContent: 'center', alignItems: 'center', borderRadius: 25, ...style }}>\n            {loading ? <ActivityIndicator color={color.primary} size={'small'} /> : <Text style={{ color: color.primary, fontSize: 20, ...GlobalStyles.bold_text, ...titleStyle }}>{title}</Text>}\n        </TouchableOpacity>\n    )\n}"]},"metadata":{},"sourceType":"module"}