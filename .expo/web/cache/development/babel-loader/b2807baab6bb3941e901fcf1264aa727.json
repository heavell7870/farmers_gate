{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"eyeIcon\", \"label\", \"labelColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Feather from '@expo/vector-icons/Feather';\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\n\nvar FloatingLabel = function (_Component) {\n  _inherits(FloatingLabel, _Component);\n\n  var _super = _createSuper(FloatingLabel);\n\n  function FloatingLabel() {\n    var _this;\n\n    _classCallCheck(this, FloatingLabel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isFocused: false,\n      isEye: false\n    };\n\n    _this.handleFocus = function () {\n      return _this.setState({\n        isFocused: true\n      });\n    };\n\n    _this.handleBlur = function () {\n      return _this.setState({\n        isFocused: false\n      });\n    };\n\n    _this.toggleEye = function () {\n      _this.setState({\n        isEye: !_this.state.isEye\n      });\n\n      _this.props.onEyePress();\n    };\n\n    return _this;\n  }\n\n  _createClass(FloatingLabel, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._animatedLabelValue = new Animated.Value(this.props.value === \"\" ? 0 : 1);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      Animated.timing(this._animatedLabelValue, {\n        toValue: this.state.isFocused || this.props.value !== \"\" ? 1 : 0,\n        duration: 200,\n        useNativeDriver: false\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          eyeIcon = _this$props.eyeIcon,\n          label = _this$props.label,\n          labelColor = _this$props.labelColor,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      var _this$state = this.state,\n          isFocused = _this$state.isFocused,\n          isEye = _this$state.isEye;\n\n      var labelStyle = _objectSpread({\n        position: \"absolute\",\n        left: 0,\n        padding: 10,\n        top: this._animatedLabelValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [3, -35]\n        }),\n        fontSize: this._animatedLabelValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [16, 15]\n        }),\n        color: this._animatedLabelValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [labelColor ? labelColor : color.white, labelColor ? labelColor : color.white]\n        })\n      }, GlobalStyles.regular_text);\n\n      return React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, style.inputWrapper), props.style)\n      }, React.createElement(Animated.Text, {\n        style: labelStyle\n      }, label), React.createElement(TextInput, _extends({}, props, {\n        keyboardType: this.props.keyboard ? this.props.keyboard : \"default\",\n        style: _objectSpread(_objectSpread({}, style.floatInput), props.inputStyle),\n        maxLength: this.props.maxLength,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      })), eyeIcon ? React.createElement(View, {\n        style: style.eyeIcon\n      }, props.secureTextEntry ? React.createElement(Feather, {\n        onPress: this.toggleEye,\n        name: \"eye\",\n        color: \"black\",\n        size: 16\n      }) : React.createElement(Feather, {\n        onPress: this.toggleEye,\n        name: \"eye-off\",\n        color: \"black\",\n        size: 16\n      })) : null);\n    }\n  }]);\n\n  return FloatingLabel;\n}(Component);\n\nvar widthScreen = Dimensions.get(\"window\").width;\nvar style = StyleSheet.create({\n  inputWrapper: {\n    marginTop: 25,\n    flexDirection: \"row\",\n    borderWidth: 1,\n    borderColor: color.primary,\n    borderRadius: 50,\n    backgroundColor: color.white,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    width: widthScreen / 1.1,\n    zIndex: -1,\n    borderWidth: 1,\n    borderColor: color.white\n  },\n  floatInput: _objectSpread({\n    flex: 1,\n    fontSize: 18,\n    padding: 10,\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 100,\n    color: color.white\n  }, GlobalStyles.regular_text),\n  eyeIcon: {\n    position: 'absolute',\n    top: 2,\n    bottom: 2,\n    right: 2,\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    zIndex: 100\n  }\n});\nexport default FloatingLabel;","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/components/FloatingLabel/index.js"],"names":["React","Component","Feather","color","GlobalStyles","FloatingLabel","state","isFocused","isEye","handleFocus","setState","handleBlur","toggleEye","props","onEyePress","_animatedLabelValue","Animated","Value","value","timing","toValue","duration","useNativeDriver","start","eyeIcon","label","labelColor","labelStyle","position","left","padding","top","interpolate","inputRange","outputRange","fontSize","white","regular_text","style","inputWrapper","keyboard","floatInput","inputStyle","maxLength","secureTextEntry","widthScreen","Dimensions","get","width","StyleSheet","create","marginTop","flexDirection","borderWidth","borderColor","primary","borderRadius","backgroundColor","height","justifyContent","alignItems","alignSelf","zIndex","flex","bottom","right"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Dimensions,\n    StyleSheet,\n    TextInput,\n    View,\n    Animated,\n} from \"react-native\";\nimport Feather from '@expo/vector-icons/Feather'\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\n\nclass FloatingLabel extends Component {\n    state = {\n        isFocused: false,\n        isEye: false\n    };\n\n    componentWillMount() {\n        this._animatedLabelValue = new Animated.Value(\n            this.props.value === \"\" ? 0 : 1\n        );\n    }\n\n    handleFocus = () => this.setState({ isFocused: true });\n    handleBlur = () => this.setState({ isFocused: false });\n\n    componentDidUpdate() {\n        Animated.timing(this._animatedLabelValue, {\n            toValue: this.state.isFocused || this.props.value !== \"\" ? 1 : 0,\n            duration: 200,\n            useNativeDriver: false,\n        }).start();\n    }\n\n    toggleEye = () => {\n        this.setState({ isEye: !this.state.isEye })\n        this.props.onEyePress()\n    }\n\n    render() {\n        const { eyeIcon, label, labelColor, ...props } = this.props;\n        const { isFocused, isEye } = this.state;\n\n        const labelStyle = {\n            position: \"absolute\",\n            left: 0,\n            padding: 10,\n            top: this._animatedLabelValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [3, -35],\n            }),\n            fontSize: this._animatedLabelValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [16, 15],\n            }),\n            color: this._animatedLabelValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelColor ? labelColor : color.white, labelColor ? labelColor : color.white],\n            }),\n            ...GlobalStyles.regular_text\n        };\n        return (\n            <View style={{ ...style.inputWrapper, ...props.style }}>\n                <Animated.Text style={labelStyle}>{label}</Animated.Text>\n                <TextInput\n                    {...props}\n                    keyboardType={this.props.keyboard ? this.props.keyboard : \"default\"}\n                    style={{ ...style.floatInput, ...props.inputStyle }}\n                    maxLength={this.props.maxLength}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                />\n                {eyeIcon ?\n                    <View style={style.eyeIcon}>\n                        {props.secureTextEntry ? <Feather onPress={this.toggleEye} name='eye' color='black' size={16} /> : <Feather onPress={this.toggleEye} name='eye-off' color='black' size={16} />}\n                    </View> : null}\n            </View>\n        );\n    }\n}\nconst widthScreen = Dimensions.get(\"window\").width;\nconst style = StyleSheet.create({\n    inputWrapper: {\n        marginTop: 25,\n        flexDirection: \"row\",\n        borderWidth: 1,\n        borderColor: color.primary,\n        borderRadius: 50,\n        backgroundColor: color.white,\n        height: 50,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        width: widthScreen / 1.1,\n        zIndex: -1,\n        borderWidth: 1,\n        borderColor: color.white,\n    },\n    floatInput: {\n        flex: 1,\n        fontSize: 18,\n        padding: 10,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 100,\n        color: color.white,\n        ...GlobalStyles.regular_text\n    },\n    eyeIcon: {\n        position: 'absolute',\n        top: 2,\n        bottom: 2,\n        right: 2,\n        width: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        borderRadius: 10,\n        zIndex: 100\n    },\n});\nexport default FloatingLabel;\n"]},"metadata":{},"sourceType":"module"}