{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Header from \"../../components/Header\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nimport { images } from \"../../utils/icons\";\nimport common_axios from \"../../utils/axios\";\nimport { WebView } from 'react-native-webview';\nexport default function StepsDescription(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([{\n    id: \"1\",\n    title: \"Peas\",\n    description: \"Dummy text\",\n    image: \"https://picsum.photos/200\"\n  }, {\n    id: \"2\",\n    title: \"Peas\",\n    description: \"Dummy text\",\n    image: \"https://picsum.photos/200\"\n  }, {\n    id: \"3\",\n    title: \"Peas\",\n    description: \"Dummy text\",\n    image: \"https://picsum.photos/200\"\n  }, {\n    id: \"4\",\n    title: \"Peas\",\n    description: \"Dummy text\",\n    image: \"https://picsum.photos/200\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var width = Dimensions.get(\"window\").width;\n  var _route$params = route.params,\n      name = _route$params.name,\n      id = _route$params.id,\n      desc = _route$params.desc;\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: color.light_primary\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: color.white\n    }\n  }, React.createElement(ListHeader, {\n    title: name\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Category\", {\n        id: id,\n        name: name\n      });\n    },\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 45,\n      bottom: 15,\n      right: 15,\n      left: 15,\n      backgroundColor: color.primary,\n      borderRadius: 5,\n      zIndex: 1\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 16,\n      color: color.white\n    }, GlobalStyles.dm_sans_bold)\n  }, \"View products\")), React.createElement(WebView, {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    source: {\n      html: desc\n    }\n  })));\n}\n\nvar ListHeader = function ListHeader(_ref2) {\n  var title = _ref2.title;\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: color.white\n    }\n  }, React.createElement(Header, {\n    title: title,\n    bagVisible: false,\n    notifyVisible: false,\n    searchVisible: false,\n    type: \"back\"\n  }));\n};\n\nvar ListFooter = function ListFooter(_ref3) {\n  var navigation = _ref3.navigation,\n      id = _ref3.id,\n      name = _ref3.name;\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      padding: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Category\", {\n        id: id,\n        name: name\n      });\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 14,\n      color: color.darkBlue,\n      textDecorationLine: \"underline\",\n      textDecorationColor: color.darkBlue\n    }, GlobalStyles.dm_sans_bold)\n  }, \"View Products\")), React.createElement(View, {\n    style: {\n      borderBottomColor: \"rgba(0, 0, 0, 0.3)\",\n      borderBottomWidth: 1,\n      width: \"100%\",\n      marginVertical: 25\n    }\n  }), React.createElement(View, null, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 14,\n      color: color.black\n    }, GlobalStyles.dm_sans_bold)\n  }, \"What is the difference between field peas and garden peas?\"), React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 12,\n      color: color.black,\n      marginTop: 10\n    }, GlobalStyles.dm_sans_regular)\n  }, \"Go to your profile.Scroll down and click on -languages. Choose your language by clicking on it\")));\n};","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/screens/stepDescription/index.js"],"names":["React","useEffect","useState","Header","color","GlobalStyles","images","common_axios","WebView","StepsDescription","navigation","route","id","title","description","image","data","setData","width","Dimensions","get","params","name","desc","flex","backgroundColor","light_primary","height","white","navigate","position","justifyContent","alignItems","bottom","right","left","primary","borderRadius","zIndex","fontSize","dm_sans_bold","html","ListHeader","ListFooter","padding","darkBlue","textDecorationLine","textDecorationColor","borderBottomColor","borderBottomWidth","marginVertical","black","marginTop","dm_sans_regular"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, SafeAreaView, Text, Image, FlatList, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\nimport Header from '../../components/Header';\nimport { color } from '../../utils/color';\nimport { GlobalStyles } from '../../utils/globalStyles';\nimport { images } from '../../utils/icons';\nimport common_axios from \"../../utils/axios\";\nimport { WebView } from 'react-native-webview';\n\nexport default function StepsDescription({ navigation, route }) {\n\n    const [data, setData] = useState([{ id: \"1\", title: \"Peas\", description: \"Dummy text\", image: \"https://picsum.photos/200\" }, { id: \"2\", title: \"Peas\", description: \"Dummy text\", image: \"https://picsum.photos/200\" }, { id: \"3\", title: \"Peas\", description: \"Dummy text\", image: \"https://picsum.photos/200\" }, { id: \"4\", title: \"Peas\", description: \"Dummy text\", image: \"https://picsum.photos/200\" },]);\n    const width = Dimensions.get(\"window\").width\n    const { name, id, desc } = route.params;\n\n    // useEffect(() => {\n    //     fetch_data()\n    // }, [])\n\n    // const fetch_data = async () => {\n    //     const { data } = await common_axios.get(`/subcategory?category_id=${id}`);\n    //     console.log(data)\n    // }\n\n    return (\n        <SafeAreaView style={{ flex: 1, backgroundColor: color.light_primary }}>\n            <View style={{ height: \"100%\", width: \"100%\", backgroundColor: color.white }}>\n                <ListHeader title={name} />\n                <TouchableOpacity onPress={() => navigation.navigate(\"Category\", { id, name })} style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center', height: 45, bottom: 15, right: 15, left: 15, backgroundColor: color.primary, borderRadius: 5, zIndex: 1 }}>\n                    <Text style={{ fontSize: 16, color: color.white, ...GlobalStyles.dm_sans_bold }}>View products</Text>\n                </TouchableOpacity>\n                {/* <FlatList\n                    data={data}\n                    showsVerticalScrollIndicator={false}\n                    numColumns={2}\n                    columnWrapperStyle={{ justifyContent: \"space-evenly\" }}\n                    style={{ backgroundColor: color.white }}\n                    keyExtractor={(item) => item.id}\n                    ListHeaderComponent={() => <ListHeader title={name} />}\n                    ListFooterComponent={() => <ListFooter name={name} id={id} navigation={navigation} />}\n                    renderItem={({ item, index }) => (\n                        <TouchableOpacity style={{ borderRadius: 5, elevation: 5, shadowColor: color.black, shadowOpacity: 0.4, shadowOffset: { height: 3, width: 0 }, shadowRadius: 3, marginBottom: 10, width: width * 0.45, height: width * 0.45 }}>\n                            <Image source={{ uri: item.image }} style={{ height: '100%', width: '100%', borderRadius: 5 }} />\n                        </TouchableOpacity>\n                    )}\n                /> */}\n                <WebView\n                    style={{ height: '100%', width: '100%' }}\n                    source={{ html: desc }}\n                />\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst ListHeader = ({ title }) => (\n    <View style={{ width: '100%', backgroundColor: color.white }}>\n        <Header title={title} bagVisible={false} notifyVisible={false} searchVisible={false} type='back' />\n        {/* <View style={{ marginVertical: 20, paddingHorizontal: 15 }}>\n            <Text style={{ fontSize: 18, color: color.black, ...GlobalStyles.dm_sans_bold }}>How to pick my peas?</Text>\n            <Text style={{ fontSize: 12, color: color.black, marginTop: 10, ...GlobalStyles.dm_sans_regular }}>Go to your profile.Scroll down and click on -languages. Choose your language by clicking on it</Text>\n        </View> */}\n    </View>\n)\n\nconst ListFooter = ({ navigation, id, name }) => (\n    <View style={{ width: '100%', padding: 15 }}>\n        <TouchableOpacity onPress={() => navigation.navigate(\"Category\", { id, name })}>\n            <Text style={{ fontSize: 14, color: color.darkBlue, textDecorationLine: \"underline\", textDecorationColor: color.darkBlue, ...GlobalStyles.dm_sans_bold }}>View Products</Text>\n        </TouchableOpacity>\n        <View style={{ borderBottomColor: \"rgba(0, 0, 0, 0.3)\", borderBottomWidth: 1, width: \"100%\", marginVertical: 25 }} />\n        <View>\n            <Text style={{ fontSize: 14, color: color.black, ...GlobalStyles.dm_sans_bold }}>What is the difference between field peas and garden peas?</Text>\n            <Text style={{ fontSize: 12, color: color.black, marginTop: 10, ...GlobalStyles.dm_sans_regular }}>Go to your profile.Scroll down and click on -languages. Choose your language by clicking on it</Text>\n        </View>\n    </View>\n)"]},"metadata":{},"sourceType":"module"}