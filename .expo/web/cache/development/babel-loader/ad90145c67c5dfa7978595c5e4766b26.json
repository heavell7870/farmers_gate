{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Feather from '@expo/vector-icons/Feather';\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nimport { icons, images } from \"../../utils/icons\";\nimport { useNavigation } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nexport default function Header(_ref) {\n  var type = _ref.type,\n      bagVisible = _ref.bagVisible,\n      logo = _ref.logo,\n      subText = _ref.subText,\n      searchVisible = _ref.searchVisible,\n      notifyVisible = _ref.notifyVisible,\n      title = _ref.title,\n      right_text = _ref.right_text,\n      onRightBtnPress = _ref.onRightBtnPress,\n      rightBtnVisible = _ref.rightBtnVisible,\n      onBagPress = _ref.onBagPress,\n      onNotifyPress = _ref.onNotifyPress;\n  var navigation = useNavigation();\n\n  if (type == 'custom') {\n    return React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 15,\n        backgroundColor: color.light_primary,\n        paddingVertical: 15,\n        alignItems: \"center\",\n        paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15\n      }\n    }, React.createElement(View, null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack(null);\n      }\n    }, React.createElement(Feather, {\n      style: {\n        marginLeft: 0\n      },\n      name: \"arrow-left\",\n      color: color.white,\n      size: 25\n    }))), React.createElement(Text, {\n      style: _objectSpread({\n        color: color.white,\n        fontSize: 20,\n        marginLeft: 15,\n        maxWidth: \"80%\"\n      }, GlobalStyles.bold_text)\n    }, title), rightBtnVisible ? React.createElement(TouchableOpacity, {\n      numberOfLines: 1,\n      onPress: onRightBtnPress\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        fontSize: 16,\n        color: color.white\n      }, GlobalStyles.dm_sans_medium)\n    }, right_text)) : React.createElement(View, {\n      style: {\n        width: 25\n      }\n    }));\n  }\n\n  if (type == 'back') {\n    return React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 15,\n        backgroundColor: color.light_primary,\n        paddingVertical: 15,\n        alignItems: \"center\",\n        paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack(null);\n      }\n    }, React.createElement(Feather, {\n      style: {\n        marginLeft: 0\n      },\n      name: \"arrow-left\",\n      color: color.white,\n      size: 25\n    })), React.createElement(Text, {\n      numberOfLines: 1,\n      style: _objectSpread({\n        color: color.white,\n        fontSize: 20,\n        marginLeft: 15,\n        width: \"68%\"\n      }, GlobalStyles.bold_text)\n    }, title)), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: \"space-between\",\n        alignItems: 'center'\n      }\n    }, bagVisible ? React.createElement(Image, {\n      source: icons.bag,\n      style: {\n        height: 20,\n        width: 16\n      }\n    }) : null, searchVisible ? React.createElement(Image, {\n      source: icons.search,\n      style: {\n        height: 20,\n        width: 20,\n        marginLeft: 15\n      }\n    }) : null, notifyVisible ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Notifications\");\n      }\n    }, React.createElement(Image, {\n      source: icons.notify,\n      style: {\n        height: 24,\n        width: 24,\n        marginLeft: 15\n      }\n    })) : null));\n  }\n\n  return React.createElement(View, {\n    style: {\n      width: \"100%\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      paddingHorizontal: 15,\n      backgroundColor: color.light_primary,\n      paddingVertical: 15,\n      alignItems: \"center\",\n      paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15\n    }\n  }, React.createElement(View, null, React.createElement(Feather, {\n    onPress: function onPress() {\n      return navigation.openDrawer();\n    },\n    name: \"menu\",\n    color: color.white,\n    size: 20\n  })), React.createElement(View, null, React.createElement(Image, {\n    style: {\n      height: 32,\n      width: \"50%\",\n      resizeMode: \"contain\"\n    },\n    source: images.logo\n  })), React.createElement(TouchableOpacity, {\n    onPress: onBagPress,\n    style: {\n      flexDirection: 'row',\n      justifyContent: \"space-between\"\n    }\n  }, bagVisible ? React.createElement(Image, {\n    source: icons.bag,\n    style: {\n      height: 20,\n      width: 16\n    }\n  }) : React.createElement(View, {\n    style: {\n      height: 20,\n      width: 16\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/components/Header/index.js"],"names":["React","Feather","color","GlobalStyles","icons","images","useNavigation","Constants","Header","type","bagVisible","logo","subText","searchVisible","notifyVisible","title","right_text","onRightBtnPress","rightBtnVisible","onBagPress","onNotifyPress","navigation","width","flexDirection","justifyContent","paddingHorizontal","backgroundColor","light_primary","paddingVertical","alignItems","paddingTop","Platform","OS","statusBarHeight","goBack","marginLeft","white","fontSize","maxWidth","bold_text","dm_sans_medium","bag","height","search","navigate","notify","openDrawer","resizeMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, Image, Platform } from 'react-native';\nimport Feather from '@expo/vector-icons/Feather';\nimport { color } from '../../utils/color';\nimport { GlobalStyles } from '../../utils/globalStyles';\nimport { icons, images } from '../../utils/icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Constants from 'expo-constants';\n\nexport default function Header({ type, bagVisible, logo, subText, searchVisible, notifyVisible, title, right_text, onRightBtnPress, rightBtnVisible, onBagPress, onNotifyPress }) {\n\n    const navigation = useNavigation()\n\n    if (type == 'custom') {\n        return (\n            <View style={{ width: \"100%\", flexDirection: \"row\", justifyContent: \"space-between\", paddingHorizontal: 15, backgroundColor: color.light_primary, paddingVertical: 15, alignItems: \"center\", paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15 }}>\n                <View>\n                    <TouchableOpacity onPress={() => navigation.goBack(null)}>\n                        <Feather style={{ marginLeft: 0 }} name='arrow-left' color={color.white} size={25} />\n                    </TouchableOpacity>\n                </View>\n                <Text style={{ color: color.white, fontSize: 20, marginLeft: 15, maxWidth: \"80%\", ...GlobalStyles.bold_text }}>{title}</Text>\n                {rightBtnVisible ? <TouchableOpacity numberOfLines={1} onPress={onRightBtnPress}>\n                    <Text style={{ fontSize: 16, color: color.white, ...GlobalStyles.dm_sans_medium }}>{right_text}</Text>\n                </TouchableOpacity> : <View style={{ width: 25 }} />}\n            </View>\n        )\n    }\n\n    if (type == 'back') {\n        return (\n            <View style={{ width: \"100%\", flexDirection: \"row\", justifyContent: \"space-between\", paddingHorizontal: 15, backgroundColor: color.light_primary, paddingVertical: 15, alignItems: \"center\", paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15 }}>\n                <View style={{ flexDirection: 'row', }}>\n                    <TouchableOpacity onPress={() => navigation.goBack(null)}>\n                        <Feather style={{ marginLeft: 0 }} name='arrow-left' color={color.white} size={25} />\n                    </TouchableOpacity>\n                    <Text numberOfLines={1} style={{ color: color.white, fontSize: 20, marginLeft: 15, width: \"68%\", ...GlobalStyles.bold_text }}>{title}</Text>\n                </View>\n                <View style={{ flexDirection: 'row', justifyContent: \"space-between\", alignItems: 'center' }}>\n                    {bagVisible ? <Image source={icons.bag} style={{ height: 20, width: 16 }} /> : null}\n                    {searchVisible ? <Image source={icons.search} style={{ height: 20, width: 20, marginLeft: 15 }} /> : null}\n                    {notifyVisible ? <TouchableOpacity onPress={() => navigation.navigate(\"Notifications\")}><Image source={icons.notify} style={{ height: 24, width: 24, marginLeft: 15 }} /></TouchableOpacity> : null}\n                </View>\n            </View>\n        )\n    }\n    return (\n        <View style={{ width: \"100%\", flexDirection: \"row\", justifyContent: \"space-between\", paddingHorizontal: 15, backgroundColor: color.light_primary, paddingVertical: 15, alignItems: \"center\", paddingTop: Platform.OS == 'android' ? Constants.statusBarHeight + 10 : 15 }}>\n            <View>\n                <Feather onPress={() => navigation.openDrawer()} name='menu' color={color.white} size={20} />\n            </View>\n            <View>\n                <Image style={{ height: 32, width: \"50%\", resizeMode: \"contain\" }} source={images.logo} />\n            </View>\n            <TouchableOpacity onPress={onBagPress} style={{ flexDirection: 'row', justifyContent: \"space-between\" }}>\n                {bagVisible ? <Image source={icons.bag} style={{ height: 20, width: 16 }} /> : <View style={{ height: 20, width: 16 }} />}\n            </TouchableOpacity>\n        </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}