{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { IS_USER, SET_COMMODITIES, USER_DATA } from \"../actions/types\";\nvar initialState = {\n  is_user: false,\n  user_data: {},\n  commodities: []\n};\n\nvar appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case IS_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        is_user: action.data\n      });\n\n    case USER_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user_data: action.data\n      });\n\n    case SET_COMMODITIES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        commodities: action.data\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/redux/reducer/appReducer.js"],"names":["IS_USER","SET_COMMODITIES","USER_DATA","initialState","is_user","user_data","commodities","appReducer","state","action","type","data"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,SAAnC;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,OAAL;AACI,6CACOQ,KADP;AAEIJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFpB;;AAIJ,SAAKT,SAAL;AACI,6CACOM,KADP;AAEIH,QAAAA,SAAS,EAAEI,MAAM,CAACE;AAFtB;;AAIJ,SAAKV,eAAL;AACI,6CACOO,KADP;AAEIF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFxB;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,UAAf","sourcesContent":["import { IS_USER, SET_COMMODITIES, USER_DATA } from \"../actions/types\";\n\n\nconst initialState = {\n    is_user: false,\n    user_data: {},\n    commodities: []\n};\n\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case IS_USER:\n            return {\n                ...state,\n                is_user: action.data\n            }\n        case USER_DATA:\n            return {\n                ...state,\n                user_data: action.data\n            }\n        case SET_COMMODITIES:\n            return {\n                ...state,\n                commodities: action.data\n            }\n        default:\n            return state;\n    }\n};\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}