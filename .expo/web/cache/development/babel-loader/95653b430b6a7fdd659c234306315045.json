{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport Header from \"../../components/Header\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nexport default function AddAddress(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pincode = _useState6[0],\n      setPincode = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      state = _useState8[0],\n      setState = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setAddress = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      locality = _useState14[0],\n      setLocality = _useState14[1];\n\n  var submit = function submit() {\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            alert(\"Enter a valid name\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (!(phone.length != 10)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Enter a valid mobile number\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(pincode.length != 6)) {\n              _context.next = 9;\n              break;\n            }\n\n            alert(\"Enter a valid pincode\");\n            return _context.abrupt(\"return\");\n\n          case 9:\n            if (!(state.length == 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            alert(\"Enter a valid state\");\n            return _context.abrupt(\"return\");\n\n          case 12:\n            if (!(city.length == 0)) {\n              _context.next = 15;\n              break;\n            }\n\n            alert(\"Enter a valid city\");\n            return _context.abrupt(\"return\");\n\n          case 15:\n            if (!(locality.length == 0)) {\n              _context.next = 18;\n              break;\n            }\n\n            alert(\"Enter a valid locality\");\n            return _context.abrupt(\"return\");\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: color.primary\n    }\n  }, React.createElement(Header, {\n    type: \"back\",\n    title: \"Add new address\"\n  }), React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      paddingHorizontal: 15,\n      paddingVertical: 20,\n      backgroundColor: color.white\n    }\n  }, React.createElement(ScrollView, null, React.createElement(FloatingLabel, {\n    value: name,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 20,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    label: \"Name\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setName(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: phone,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    label: \"Mobile Number\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPhone(value);\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    }\n  }, React.createElement(FloatingLabel, {\n    value: pincode,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)',\n      width: '47%'\n    },\n    label: \"Pincode\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPincode(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: state,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)',\n      width: '47%'\n    },\n    label: \"State\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setState(value);\n    }\n  })), React.createElement(FloatingLabel, {\n    value: address,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    label: \"Address\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setAddress(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: city,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    label: \"City\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setCity(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: locality,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: 'rgba(0, 0, 0, 0.6)'\n    },\n    label: \"Locality\",\n    labelColor: color.black,\n    inputStyle: {\n      color: 'rgba(0, 0, 0, 0.6)',\n      fontSize: 12\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setLocality(value);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return submit();\n    },\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 45,\n      backgroundColor: color.primary,\n      borderRadius: 5,\n      marginTop: 30\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 16,\n      color: color.white\n    }, GlobalStyles.dm_sans_bold)\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/screens/AddAddress/index.js"],"names":["React","useState","FloatingLabel","Header","color","GlobalStyles","AddAddress","navigation","name","setName","phone","setPhone","pincode","setPincode","state","setState","address","setAddress","city","setCity","locality","setLocality","submit","length","alert","backgroundColor","primary","height","width","paddingHorizontal","paddingVertical","white","transparent","marginTop","borderColor","borderRadius","black","fontSize","value","flexDirection","alignItems","justifyContent","dm_sans_bold"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView } from 'react-native';\nimport { SafeAreaView } from \"react-native\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport Header from \"../../components/Header\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\n\nexport default function AddAddress({ navigation }) {\n\n    const [name, setName] = useState('')\n    const [phone, setPhone] = useState('')\n    const [pincode, setPincode] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState('')\n    const [city, setCity] = useState('')\n    const [locality, setLocality] = useState('')\n\n    const submit = async () => {\n        if (name.length == 0) {\n            alert(\"Enter a valid name\");\n            return;\n        }\n\n        if (phone.length != 10) {\n            alert(\"Enter a valid mobile number\");\n            return;\n        }\n\n        if (pincode.length != 6) {\n            alert(\"Enter a valid pincode\");\n            return;\n        }\n        if (state.length == 0) {\n            alert(\"Enter a valid state\");\n            return;\n        }\n        if (city.length == 0) {\n            alert(\"Enter a valid city\");\n            return;\n        }\n        if (locality.length == 0) {\n            alert(\"Enter a valid locality\");\n            return;\n        }\n    }\n\n    return (\n        <SafeAreaView style={{ backgroundColor: color.primary }}>\n            <Header type=\"back\" title=\"Add new address\" />\n            <View style={{ height: \"100%\", width: \"100%\", paddingHorizontal: 15, paddingVertical: 20, backgroundColor: color.white }}>\n                <ScrollView>\n                    <FloatingLabel\n                        value={name}\n                        style={{ backgroundColor: color.transparent, marginTop: 20, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)' }}\n                        label={\"Name\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setName(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={phone}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)' }}\n                        label={\"Mobile Number\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setPhone(value);\n                        }}\n                    />\n                    <View style={{ flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                        <FloatingLabel\n                            value={pincode}\n                            style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)', width: '47%' }}\n                            label={\"Pincode\"}\n                            labelColor={color.black}\n                            inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                            autoCapitalize=\"none\"\n                            onChangeText={(value) => {\n                                setPincode(value);\n                            }}\n                        />\n                        <FloatingLabel\n                            value={state}\n                            style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)', width: '47%' }}\n                            label={\"State\"}\n                            labelColor={color.black}\n                            inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                            autoCapitalize=\"none\"\n                            onChangeText={(value) => {\n                                setState(value);\n                            }}\n                        />\n                    </View>\n                    <FloatingLabel\n                        value={address}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)' }}\n                        label={\"Address\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setAddress(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={city}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)' }}\n                        label={\"City\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setCity(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={locality}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: 'rgba(0, 0, 0, 0.6)' }}\n                        label={\"Locality\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: 'rgba(0, 0, 0, 0.6)', fontSize: 12 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setLocality(value);\n                        }}\n                    />\n                    <TouchableOpacity onPress={() => submit()} style={{ justifyContent: 'center', alignItems: 'center', height: 45, backgroundColor: color.primary, borderRadius: 5, marginTop: 30 }}>\n                        <Text style={{ fontSize: 16, color: color.white, ...GlobalStyles.dm_sans_bold }}>Submit</Text>\n                    </TouchableOpacity>\n                </ScrollView>\n            </View>\n        </SafeAreaView>\n    )\n}"]},"metadata":{},"sourceType":"module"}