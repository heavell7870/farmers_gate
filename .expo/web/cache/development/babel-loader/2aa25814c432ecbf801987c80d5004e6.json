{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Container from \"../../components/Container\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { color } from \"../../utils/color\";\nimport Button from \"../../components/Button\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport common_axios from \"../../utils/axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from \"../../redux/actions/main\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var handlePress = function handlePress() {\n    var reg, _await$common_axios$p, data;\n\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (reg.test(email)) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Enter a valid email\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(common_axios.post(\"/auth/login_otp\", {\n              email: email\n            }));\n\n          case 8:\n            _await$common_axios$p = _context.sent;\n            data = _await$common_axios$p.data;\n            console.log(data);\n            setLoading(false);\n\n            if (data.status == 200) {\n              navigation.navigate(\"Verification\", {\n                email: email\n              });\n            }\n\n            _context.next = 20;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n            alert(\"Server error\");\n            setLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 15]], Promise);\n  };\n\n  return React.createElement(Container, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      bottom: 70,\n      left: 0,\n      right: 0,\n      zIndex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 28,\n      color: color.white\n    }, GlobalStyles.bold_text)\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 16,\n      color: color.white,\n      marginTop: 10\n    }, GlobalStyles.semi_bold_text)\n  }, \"Create your account or login to start\"), React.createElement(FloatingLabel, {\n    value: email,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 60\n    },\n    label: \"Email Address\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: password,\n    secureTextEntry: true,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40\n    },\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPassword(value);\n    }\n  }), React.createElement(Button, {\n    titleStyle: {\n      fontSize: 16\n    },\n    style: {\n      marginTop: 15\n    },\n    title: \"Login\",\n    onPress: function onPress() {\n      return handlePress();\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 14,\n      color: color.light_grey,\n      marginTop: 10\n    }, GlobalStyles.regular_text)\n  }, \"Doesn\\u2019t have an account? \", React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    },\n    style: {\n      color: color.white\n    }\n  }, \"Register\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/screens/login/index.js"],"names":["React","useState","Container","color","Button","GlobalStyles","FloatingLabel","common_axios","AsyncStorage","useDispatch","setIsUser","setUserData","Login","navigation","email","setEmail","password","setPassword","loading","setLoading","dispatch","handlePress","reg","test","alert","post","data","console","log","status","navigate","justifyContent","alignItems","position","bottom","left","right","zIndex","fontSize","white","bold_text","marginTop","semi_bold_text","backgroundColor","transparent","value","light_grey","regular_text"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP;;;AAEA,SAASC,KAAT;AACA,OAAOC,MAAP;AACA,SAASC,YAAT;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,WAApB;;AAEA,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAE3B,kBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BhB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,GADY,GACN,+CADM;;AAAA,gBAGXA,GAAG,CAACC,IAAJ,CAAST,KAAT,CAHW;AAAA;AAAA;AAAA;;AAIZU,YAAAA,KAAK,CAAC,qBAAD,CAAL;AAJY;;AAAA;AAYhBL,YAAAA,UAAU,CAAC,IAAD,CAAV;AAZgB;AAAA;AAAA,6CAcWZ,YAAY,CAACkB,IAAb,CAAkB,iBAAlB,EAAqC;AACxDX,cAAAA,KAAK,EAALA;AADwD,aAArC,CAdX;;AAAA;AAAA;AAcJY,YAAAA,IAdI,yBAcJA,IAdI;AAiBZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,YAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,gBAAIO,IAAI,CAACG,MAAL,IAAe,GAAnB,EAAwB;AACpBhB,cAAAA,UAAU,CAACiB,QAAX,CAAoB,cAApB,EAAoC;AAAEhB,gBAAAA,KAAK,EAALA;AAAF,eAApC;AACH;;AArBW;AAAA;;AAAA;AAAA;AAAA;AAuBZa,YAAAA,OAAO,CAACC,GAAR;AACAJ,YAAAA,KAAK,CAAC,cAAD,CAAL;AACAL,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAzBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AA6BA,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEY,MAAAA,cAAc,EAAE,QAAlB;AAA4BC,MAAAA,UAAU,EAAE;AAAxC;AAAlB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE,EAAhC;AAAoCC,MAAAA,IAAI,EAAE,CAA1C;AAA6CC,MAAAA,KAAK,EAAE,CAApD;AAAuDC,MAAAA,MAAM,EAAE,CAA/D;AAAkEN,MAAAA,cAAc,EAAE,QAAlF;AAA4FC,MAAAA,UAAU,EAAE;AAAxG;AAAb,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAIM,MAAAA,QAAQ,EAAE,EAAd;AAAkBnC,MAAAA,KAAK,EAAEA,KAAK,CAACoC;AAA/B,OAAyClC,YAAY,CAACmC,SAAtD;AAAX,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAIF,MAAAA,QAAQ,EAAE,EAAd;AAAkBnC,MAAAA,KAAK,EAAEA,KAAK,CAACoC,KAA/B;AAAsCE,MAAAA,SAAS,EAAE;AAAjD,OAAwDpC,YAAY,CAACqC,cAArE;AAAX,6CAFJ,EAGI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE5B,KADX;AAEI,IAAA,KAAK,EAAE;AAAE6B,MAAAA,eAAe,EAAExC,KAAK,CAACyC,WAAzB;AAAsCH,MAAAA,SAAS,EAAE;AAAjD,KAFX;AAGI,IAAA,KAAK,EAAE,eAHX;AAII,IAAA,cAAc,EAAC,MAJnB;AAKI,IAAA,YAAY,EAAE,sBAACI,KAAD,EAAW;AACrB9B,MAAAA,QAAQ,CAAC8B,KAAD,CAAR;AACH;AAPL,IAHJ,EAYI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE7B,QADX;AAEI,IAAA,eAAe,EAAE,IAFrB;AAGI,IAAA,KAAK,EAAE;AAAE2B,MAAAA,eAAe,EAAExC,KAAK,CAACyC,WAAzB;AAAsCH,MAAAA,SAAS,EAAE;AAAjD,KAHX;AAII,IAAA,KAAK,EAAE,UAJX;AAKI,IAAA,cAAc,EAAC,MALnB;AAMI,IAAA,YAAY,EAAE,sBAACI,KAAD,EAAW;AACrB5B,MAAAA,WAAW,CAAC4B,KAAD,CAAX;AACH;AARL,IAZJ,EAsBI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE;AAAEP,MAAAA,QAAQ,EAAE;AAAZ,KAApB;AAAsC,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAA7C;AAAgE,IAAA,KAAK,EAAE,OAAvE;AAAgF,IAAA,OAAO,EAAE;AAAA,aAAMpB,WAAW,EAAjB;AAAA;AAAzF,IAtBJ,EAuBI,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAIiB,MAAAA,QAAQ,EAAE,EAAd;AAAkBnC,MAAAA,KAAK,EAAEA,KAAK,CAAC2C,UAA/B;AAA2CL,MAAAA,SAAS,EAAE;AAAtD,OAA6DpC,YAAY,CAAC0C,YAA1E;AAAX,uCAA8H,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE;AAAA,aAAMlC,UAAU,CAACiB,QAAX,CAAoB,UAApB,CAAN;AAAA,KAAf;AAAsD,IAAA,KAAK,EAAE;AAAE3B,MAAAA,KAAK,EAAEA,KAAK,CAACoC;AAAf;AAA7D,gBAA9H,CAvBJ,CADJ,CADJ;AA6BH;;AAED,eAAe3B,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Container from '../../components/Container';\nimport { View, Text } from 'react-native'\nimport { color } from '../../utils/color';\nimport Button from '../../components/Button';\nimport { GlobalStyles } from '../../utils/globalStyles';\nimport FloatingLabel from '../../components/FloatingLabel';\nimport common_axios from '../../utils/axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from '../../redux/actions/main';\n\nfunction Login({ navigation }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handlePress = async () => {\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n        if (!reg.test(email)) {\n            alert(\"Enter a valid email\");\n            return;\n        }\n\n        // if (password.length < 5) {\n        //     alert(\"Enter a valid password\")\n        //     return;\n        // }\n        setLoading(true)\n        try {\n            const { data } = await common_axios.post(\"/auth/login_otp\", {\n                email,\n            })\n            console.log(data)\n            setLoading(false)\n            if (data.status == 200) {\n                navigation.navigate(\"Verification\", { email })\n            }\n        } catch (e) {\n            console.log(e)\n            alert(\"Server error\")\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Container style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <View style={{ position: 'absolute', bottom: 70, left: 0, right: 0, zIndex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <Text style={{ fontSize: 28, color: color.white, ...GlobalStyles.bold_text }}>Welcome!</Text>\n                <Text style={{ fontSize: 16, color: color.white, marginTop: 10, ...GlobalStyles.semi_bold_text }}>Create your account or login to start</Text>\n                <FloatingLabel\n                    value={email}\n                    style={{ backgroundColor: color.transparent, marginTop: 60 }}\n                    label={\"Email Address\"}\n                    autoCapitalize=\"none\"\n                    onChangeText={(value) => {\n                        setEmail(value);\n                    }}\n                />\n                <FloatingLabel\n                    value={password}\n                    secureTextEntry={true}\n                    style={{ backgroundColor: color.transparent, marginTop: 40 }}\n                    label={\"Password\"}\n                    autoCapitalize=\"none\"\n                    onChangeText={(value) => {\n                        setPassword(value);\n                    }}\n                />\n                <Button titleStyle={{ fontSize: 16 }} style={{ marginTop: 15 }} title={\"Login\"} onPress={() => handlePress()} />\n                <Text style={{ fontSize: 14, color: color.light_grey, marginTop: 10, ...GlobalStyles.regular_text }}>Doesn’t have an account? <Text onPress={() => navigation.navigate(\"Register\")} style={{ color: color.white }}>Register</Text></Text>\n            </View>\n        </Container>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}