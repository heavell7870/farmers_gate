{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Container from \"../../components/Container\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { color } from \"../../utils/color\";\nimport Button from \"../../components/Button\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport common_axios from \"../../utils/axios\";\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from \"../../redux/actions/main\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var dispatch = useDispatch();\n\n  var handlePress = function handlePress() {\n    var reg, _await$common_axios$p, data;\n\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (!(username.length == 0)) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Enter a valid username\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (!(phone.length != 10)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Enter a valid phone num\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            if (reg.test(email)) {\n              _context.next = 10;\n              break;\n            }\n\n            alert(\"Enter a valid email\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            setLoading(true);\n            _context.prev = 11;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(common_axios.post(\"/auth/request_otp\", {\n              name: username,\n              email: email,\n              phone: phone,\n              country: \"India\"\n            }));\n\n          case 14:\n            _await$common_axios$p = _context.sent;\n            data = _await$common_axios$p.data;\n            console.log(data);\n            setLoading(false);\n\n            if (data.status == 200) {\n              navigation.navigate(\"Verification\", {\n                email: email\n              });\n            }\n\n            _context.next = 26;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](11);\n            console.log(_context.t0);\n            alert(\"Server error\");\n            setLoading(false);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[11, 21]], Promise);\n  };\n\n  return React.createElement(Container, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 28,\n      color: color.white\n    }, GlobalStyles.bold_text)\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 16,\n      color: color.white,\n      marginTop: 10\n    }, GlobalStyles.semi_bold_text)\n  }, \"Create your account to get started\"), React.createElement(FloatingLabel, {\n    value: username,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 50\n    },\n    label: \"User Name\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setUsername(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: phone,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40\n    },\n    label: \"Phone Number\",\n    maxLength: 10,\n    keyboardType: \"phone-pad\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPhone(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: email,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40\n    },\n    label: \"Email Address\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n    }\n  }), React.createElement(Button, {\n    titleStyle: {\n      fontSize: 16\n    },\n    style: {\n      marginTop: 25\n    },\n    title: \"Register\",\n    onPress: function onPress() {\n      return handlePress();\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 14,\n      color: color.light_grey,\n      marginTop: 10\n    }, GlobalStyles.regular_text)\n  }, \"Already have an account? \", React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    style: {\n      color: color.white\n    }\n  }, \"Login\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/screens/Register/index.js"],"names":["React","useState","Container","color","Button","GlobalStyles","FloatingLabel","common_axios","useDispatch","setIsUser","setUserData","AsyncStorage","Register","navigation","email","setEmail","username","setUsername","phone","setPhone","password","setPassword","loading","setLoading","dispatch","handlePress","reg","length","alert","test","post","name","country","data","console","log","status","navigate","justifyContent","alignItems","fontSize","white","bold_text","marginTop","semi_bold_text","backgroundColor","transparent","value","light_grey","regular_text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Container from '../../components/Container';\nimport { View, Text } from 'react-native'\nimport { color } from '../../utils/color';\nimport Button from '../../components/Button';\nimport { GlobalStyles } from '../../utils/globalStyles';\nimport FloatingLabel from '../../components/FloatingLabel';\nimport common_axios from '../../utils/axios';\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from '../../redux/actions/main';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction Register({ navigation }) {\n\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\")\n    const [phone, setPhone] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const dispatch = useDispatch();\n\n    const handlePress = async () => {\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n        if (username.length == 0) {\n            alert(\"Enter a valid username\");\n            return;\n        }\n\n        if (phone.length != 10) {\n            alert(\"Enter a valid phone num\")\n            return;\n        }\n\n        if (!reg.test(email)) {\n            alert(\"Enter a valid email\");\n            return;\n        }\n\n        // if (password.length < 5) {\n        //     alert(\"Enter a valid password\")\n        //     return;\n        // }\n        setLoading(true)\n        try {\n            const { data } = await common_axios.post(\"/auth/request_otp\", {\n                name: username,\n                email,\n                phone,\n                country: \"India\"\n            })\n            console.log(data)\n            setLoading(false)\n            if (data.status == 200) {\n                navigation.navigate(\"Verification\", { email })\n                // dispatch(setUserData(data.data))\n                // dispatch(setIsUser(true))\n                // await AsyncStorage.setItem('access_token', JSON.stringify(data.data?.api_token))\n                // await AsyncStorage.setItem('user_data', JSON.stringify(data.data))\n            }\n        } catch (e) {\n            console.log(e)\n            alert(\"Server error\")\n            setLoading(false)\n        }\n    }\n\n    return (\n        <Container style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <Text style={{ fontSize: 28, color: color.white, ...GlobalStyles.bold_text }}>Welcome!</Text>\n            <Text style={{ fontSize: 16, color: color.white, marginTop: 10, ...GlobalStyles.semi_bold_text }}>Create your account to get started</Text>\n            <FloatingLabel\n                value={username}\n                style={{ backgroundColor: color.transparent, marginTop: 50 }}\n                label={\"User Name\"}\n                autoCapitalize=\"none\"\n                onChangeText={(value) => {\n                    setUsername(value);\n                }}\n            />\n            <FloatingLabel\n                value={phone}\n                style={{ backgroundColor: color.transparent, marginTop: 40 }}\n                label={\"Phone Number\"}\n                maxLength={10}\n                keyboardType=\"phone-pad\"\n                autoCapitalize=\"none\"\n                onChangeText={(value) => {\n                    setPhone(value);\n                }}\n            />\n            <FloatingLabel\n                value={email}\n                style={{ backgroundColor: color.transparent, marginTop: 40 }}\n                label={\"Email Address\"}\n                autoCapitalize=\"none\"\n                onChangeText={(value) => {\n                    setEmail(value);\n                }}\n            />\n            {/* <FloatingLabel\n                value={password}\n                secureTextEntry={true}\n                style={{ backgroundColor: color.transparent, marginTop: 40 }}\n                label={\"Password\"}\n                autoCapitalize=\"none\"\n                onChangeText={(value) => {\n                    setPassword(value);\n                }}\n            /> */}\n            <Button titleStyle={{ fontSize: 16 }} style={{ marginTop: 25 }} title={\"Register\"} onPress={() => handlePress()} />\n            <Text style={{ fontSize: 14, color: color.light_grey, marginTop: 10, ...GlobalStyles.regular_text }}>Already have an account? <Text onPress={() => navigation.navigate(\"Login\")} style={{ color: color.white }}>Login</Text></Text>\n        </Container>\n    )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}