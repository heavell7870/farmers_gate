{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Axios from \"axios\";\nimport { BACKEND_URL } from \"./url\";\nvar common_axios = Axios.create({\n  baseURL: BACKEND_URL\n});\ncommon_axios.interceptors.request.use(function _callee(config) {\n  var token, access_token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"access_token\"));\n\n        case 2:\n          token = _context.sent;\n          access_token = JSON.parse(token);\n          console.log(token);\n\n          if (access_token) {\n            config.headers.common = {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n              Authorization: \"Bearer \" + access_token\n            };\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default common_axios;","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/utils/axios.js"],"names":["AsyncStorage","Axios","BACKEND_URL","common_axios","create","baseURL","interceptors","request","use","config","getItem","token","access_token","JSON","parse","console","log","headers","common","Accept","Authorization","error","Promise","reject"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT;AAGA,IAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAEH;AADqB,CAAb,CAArB;AAIAC,YAAY,CAACG,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CACI,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACwBT,YAAY,CAACU,OAAb,CAAqB,cAArB,CADxB;;AAAA;AACUC,UAAAA,KADV;AAEUC,UAAAA,YAFV,GAEyBC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAFzB;AAGII,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,cAAIC,YAAJ,EAAkB;AACdH,YAAAA,MAAM,CAACQ,OAAP,CAAeC,MAAf,GAAwB;AACpB,8BAAgB,kBADI;AAEpBC,cAAAA,MAAM,EAAE,kBAFY;AAGpBC,cAAAA,aAAa,cAAYR;AAHL,aAAxB;AAKH;;AAVL,2CAWWH,MAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADJ,EAcI,UAACY,KAAD,EAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBL;AAmBA,eAAelB,YAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Axios from \"axios\";\nimport { BACKEND_URL } from \"./url\";\n\n\nconst common_axios = Axios.create({\n    baseURL: BACKEND_URL,\n});\n\ncommon_axios.interceptors.request.use(\n    async (config) => {\n        const token = await AsyncStorage.getItem(\"access_token\");\n        const access_token = JSON.parse(token);\n        console.log(token)\n        if (access_token) {\n            config.headers.common = {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n                Authorization: `Bearer ${access_token}`,\n            };\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default common_axios;\n"]},"metadata":{},"sourceType":"module"}