{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts, Poppins_400Regular, Poppins_700Bold, Poppins_500Medium, Poppins_800ExtraBold, Poppins_600SemiBold, Poppins_300Light, Poppins_900Black } from '@expo-google-fonts/poppins';\nimport AppLoading from 'expo-app-loading';\nimport { GlobalStyles } from \"./src/utils/globalStyles\";\nimport Navigation from \"./src/navigation\";\nimport { DMSans_400Regular, DMSans_400Regular_Italic, DMSans_500Medium, DMSans_500Medium_Italic, DMSans_700Bold, DMSans_700Bold_Italic } from '@expo-google-fonts/dm-sans';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from \"./src/redux/actions/main\";\nexport default function App() {\n  var dispatch = useDispatch();\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_700Bold: Poppins_700Bold,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_800ExtraBold: Poppins_800ExtraBold,\n    Poppins_600SemiBold: Poppins_600SemiBold,\n    Poppins_300Light: Poppins_300Light,\n    Poppins_900Black: Poppins_900Black,\n    DMSans_400Regular: DMSans_400Regular,\n    DMSans_400Regular_Italic: DMSans_400Regular_Italic,\n    DMSans_500Medium: DMSans_500Medium,\n    DMSans_500Medium_Italic: DMSans_500Medium_Italic,\n    DMSans_700Bold: DMSans_700Bold,\n    DMSans_700Bold_Italic: DMSans_700Bold_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    check_auth();\n  }, []);\n\n  var check_auth = function check_auth() {\n    var val, new_val, user_data;\n    return _regeneratorRuntime.async(function check_auth$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"access_token\"));\n\n          case 2:\n            val = _context.sent;\n            new_val = JSON.parse(val);\n\n            if (!new_val) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user_data\"));\n\n          case 7:\n            user_data = _context.sent;\n            dispatch(setIsUser(true));\n            dispatch(setUserData(JSON.parse(user_data)));\n            _context.next = 13;\n            break;\n\n          case 12:\n            dispatch(setIsUser(false));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, null);\n  }\n\n  return React.createElement(Navigation, null);\n}","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/App.js"],"names":["StatusBar","React","useEffect","useFonts","Poppins_400Regular","Poppins_700Bold","Poppins_500Medium","Poppins_800ExtraBold","Poppins_600SemiBold","Poppins_300Light","Poppins_900Black","AppLoading","GlobalStyles","Navigation","DMSans_400Regular","DMSans_400Regular_Italic","DMSans_500Medium","DMSans_500Medium_Italic","DMSans_700Bold","DMSans_700Bold_Italic","AsyncStorage","useDispatch","setIsUser","setUserData","App","dispatch","fontsLoaded","check_auth","getItem","val","new_val","JSON","parse","user_data"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,eAAvC,EAAwDC,iBAAxD,EAA2EC,oBAA3E,EAAiGC,mBAAjG,EAAsHC,gBAAtH,EAAwIC,gBAAxI,QAAgK,4BAAhK;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT;AACA,OAAOC,UAAP;AACA,SAASC,iBAAT,EAA4BC,wBAA5B,EAAsDC,gBAAtD,EAAwEC,uBAAxE,EAAiGC,cAAjG,EAAiHC,qBAAjH,QAA+I,4BAA/I;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,WAApB;AACA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,kBAAoBlB,QAAQ,CAAC;AAC3BC,IAAAA,kBAAkB,EAAlBA,kBAD2B;AACPC,IAAAA,eAAe,EAAfA,eADO;AACUC,IAAAA,iBAAiB,EAAjBA,iBADV;AAC6BC,IAAAA,oBAAoB,EAApBA,oBAD7B;AACmDC,IAAAA,mBAAmB,EAAnBA,mBADnD;AACwEC,IAAAA,gBAAgB,EAAhBA,gBADxE;AAC0FC,IAAAA,gBAAgB,EAAhBA,gBAD1F;AAC4GI,IAAAA,iBAAiB,EAAjBA,iBAD5G;AAC+HC,IAAAA,wBAAwB,EAAxBA,wBAD/H;AACyJC,IAAAA,gBAAgB,EAAhBA,gBADzJ;AAC2KC,IAAAA,uBAAuB,EAAvBA,uBAD3K;AACoMC,IAAAA,cAAc,EAAdA,cADpM;AACoNC,IAAAA,qBAAqB,EAArBA;AADpN,GAAD,CAA5B;AAAA;AAAA,MAAKO,WAAL;;AAIAxB,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCP,YAAY,CAACQ,OAAb,CAAqB,cAArB,CADD;;AAAA;AACXC,YAAAA,GADW;AAEXC,YAAAA,OAFW,GAEDC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAFC;;AAAA,iBAGbC,OAHa;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAISV,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAJT;;AAAA;AAITK,YAAAA,SAJS;AAKfR,YAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AACAG,YAAAA,QAAQ,CAACF,WAAW,CAACQ,IAAI,CAACC,KAAL,CAAWC,SAAX,CAAD,CAAZ,CAAR;AANe;AAAA;;AAAA;AAQfR,YAAAA,QAAQ,CAACH,SAAS,CAAC,KAAD,CAAV,CAAR;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAYA,MAAI,CAACI,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD,OAAP;AACD;;AAGD,SACE,oBAAC,UAAD,OADF;AAGD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useFonts, Poppins_400Regular, Poppins_700Bold, Poppins_500Medium, Poppins_800ExtraBold, Poppins_600SemiBold, Poppins_300Light, Poppins_900Black } from '@expo-google-fonts/poppins';\nimport AppLoading from 'expo-app-loading';\nimport { GlobalStyles } from './src/utils/globalStyles';\nimport Navigation from './src/navigation';\nimport { DMSans_400Regular, DMSans_400Regular_Italic, DMSans_500Medium, DMSans_500Medium_Italic, DMSans_700Bold, DMSans_700Bold_Italic, } from '@expo-google-fonts/dm-sans';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport { setIsUser, setUserData } from './src/redux/actions/main';\nexport default function App() {\n\n  const dispatch = useDispatch()\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular, Poppins_700Bold, Poppins_500Medium, Poppins_800ExtraBold, Poppins_600SemiBold, Poppins_300Light, Poppins_900Black, DMSans_400Regular, DMSans_400Regular_Italic, DMSans_500Medium, DMSans_500Medium_Italic, DMSans_700Bold, DMSans_700Bold_Italic,\n  });\n\n  useEffect(() => {\n    check_auth()\n  }, [])\n\n  const check_auth = async () => {\n    const val = await AsyncStorage.getItem(\"access_token\");\n    const new_val = JSON.parse(val)\n    if (new_val) {\n      const user_data = await AsyncStorage.getItem(\"user_data\")\n      dispatch(setIsUser(true))\n      dispatch(setUserData(JSON.parse(user_data)))\n    } else {\n      dispatch(setIsUser(false))\n    }\n  }\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n\n  return (\n    <Navigation />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}