{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport Header from \"../../components/Header\";\nimport { getLocation } from \"../../redux/actions/main\";\nimport common_axios from \"../../utils/axios\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\nexport default function AddAddress(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pincode = _useState6[0],\n      setPincode = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      state = _useState8[0],\n      setState = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setAddress = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      locality = _useState14[0],\n      setLocality = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  var current = (_route$params = route.params) == null ? void 0 : _route$params.current;\n  var dispatch = useDispatch();\n  console.log(current);\n  useEffect(function () {\n    if (current) {\n      getCurrentLoc();\n    }\n  }, [current]);\n\n  var getCurrentLoc = function getCurrentLoc() {\n    var _loc$coords, _loc$coords2;\n\n    var loc, _await$axios$get, data, letVar;\n\n    return _regeneratorRuntime.async(function getCurrentLoc$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(getLocation()));\n\n          case 3:\n            loc = _context.sent;\n            console.log(loc);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + ((_loc$coords = loc.coords) == null ? void 0 : _loc$coords.latitude) + \",\" + ((_loc$coords2 = loc.coords) == null ? void 0 : _loc$coords2.longitude) + \"&key=\" + 'AIzaSyA_nmZVriBFLHl4ZdmN7d_WVr9PEH2sZa4'));\n\n          case 7:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            console.log(data);\n\n            if (data.status == 'OK') {\n              setAddress(data.results[0].formatted_address);\n              letVar = data.results[0].address_components;\n              letVar.forEach(function (item) {\n                item.types.forEach(function (qr) {\n                  if (qr === 'locality') {\n                    setLocality(item.long_name);\n                  }\n\n                  if (qr === 'administrative_area_level_2') {\n                    setCity(item.long_name);\n                  }\n\n                  if (qr === 'administrative_area_level_1') {\n                    setState(item.long_name);\n                  }\n\n                  if (qr === 'postal_code') {\n                    setPincode(item.long_name);\n                  }\n                });\n              });\n              setLoading(false);\n            }\n\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.reducer;\n  }),\n      user_data = _useSelector.user_data;\n\n  var submit = function submit() {\n    var _await$common_axios$p, data;\n\n    return _regeneratorRuntime.async(function submit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(name.length == 0)) {\n              _context2.next = 3;\n              break;\n            }\n\n            alert(\"Enter a valid name\");\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            if (!(phone.length != 10)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"Enter a valid mobile number\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            if (!(pincode.length != 6)) {\n              _context2.next = 9;\n              break;\n            }\n\n            alert(\"Enter a valid pincode\");\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!(state.length == 0)) {\n              _context2.next = 12;\n              break;\n            }\n\n            alert(\"Enter a valid state\");\n            return _context2.abrupt(\"return\");\n\n          case 12:\n            if (!(city.length == 0)) {\n              _context2.next = 15;\n              break;\n            }\n\n            alert(\"Enter a valid city\");\n            return _context2.abrupt(\"return\");\n\n          case 15:\n            if (!(locality.length == 0)) {\n              _context2.next = 18;\n              break;\n            }\n\n            alert(\"Enter a valid locality\");\n            return _context2.abrupt(\"return\");\n\n          case 18:\n            setLoading(true);\n            _context2.prev = 19;\n            _context2.next = 22;\n            return _regeneratorRuntime.awrap(common_axios.post('/useraddress', {\n              user_id: user_data.id,\n              pincode: pincode,\n              state: state,\n              address: address,\n              city: city,\n              locality: locality,\n              phone: phone,\n              name: name\n            }));\n\n          case 22:\n            _await$common_axios$p = _context2.sent;\n            data = _await$common_axios$p.data;\n\n            if (data.status == \"1\") {\n              setLoading(false);\n              navigation.goBack(null);\n            }\n\n            _context2.next = 31;\n            break;\n\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](19);\n            setLoading(false);\n            console.log(_context2.t0);\n\n          case 31:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[19, 27]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: color.primary\n    }\n  }, React.createElement(Header, {\n    type: \"back\",\n    title: \"Add new address\"\n  }), React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      paddingHorizontal: 15,\n      paddingVertical: 20,\n      backgroundColor: color.white\n    }\n  }, React.createElement(ScrollView, null, React.createElement(FloatingLabel, {\n    value: name,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 20,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black\n    },\n    label: \"Name\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setName(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: phone,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black\n    },\n    label: \"Mobile Number\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPhone(value);\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    }\n  }, React.createElement(FloatingLabel, {\n    value: pincode,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black,\n      width: '47%'\n    },\n    label: \"Pincode\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setPincode(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: state,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black,\n      width: '47%'\n    },\n    label: \"State\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setState(value);\n    }\n  })), React.createElement(FloatingLabel, {\n    value: address,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black\n    },\n    label: \"Address\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setAddress(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: city,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black\n    },\n    label: \"City\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setCity(value);\n    }\n  }), React.createElement(FloatingLabel, {\n    value: locality,\n    style: {\n      backgroundColor: color.transparent,\n      marginTop: 40,\n      borderColor: \"#c4c4c4\",\n      borderRadius: 5,\n      color: color.black\n    },\n    label: \"Locality\",\n    labelColor: color.black,\n    inputStyle: {\n      color: color.black,\n      fontSize: 16\n    },\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      setLocality(value);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return submit();\n    },\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 45,\n      backgroundColor: color.primary,\n      borderRadius: 5,\n      marginTop: 30\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: color.white,\n    size: 'small'\n  }) : React.createElement(Text, {\n    style: _objectSpread({\n      fontSize: 16,\n      color: color.white\n    }, GlobalStyles.dm_sans_bold)\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["/Users/omkumar/Desktop/projects/farmers-gate/farmers-gate/src/screens/AddAddress/index.js"],"names":["axios","React","useEffect","useState","useDispatch","useSelector","FloatingLabel","Header","getLocation","common_axios","color","GlobalStyles","AddAddress","navigation","route","name","setName","phone","setPhone","pincode","setPincode","state","setState","address","setAddress","city","setCity","locality","setLocality","loading","setLoading","current","params","dispatch","console","log","getCurrentLoc","loc","get","coords","latitude","longitude","data","status","results","formatted_address","letVar","address_components","forEach","item","types","qr","long_name","reducer","user_data","submit","length","alert","post","user_id","id","goBack","backgroundColor","primary","height","width","paddingHorizontal","paddingVertical","white","transparent","marginTop","borderColor","borderRadius","black","fontSize","value","flexDirection","alignItems","justifyContent","dm_sans_bold"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\nimport { SafeAreaView } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FloatingLabel from \"../../components/FloatingLabel\";\nimport Header from \"../../components/Header\";\nimport { getLocation } from \"../../redux/actions/main\";\nimport common_axios from \"../../utils/axios\";\nimport { color } from \"../../utils/color\";\nimport { GlobalStyles } from \"../../utils/globalStyles\";\n\nexport default function AddAddress({ navigation, route }) {\n\n    const [name, setName] = useState('')\n    const [phone, setPhone] = useState('')\n    const [pincode, setPincode] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState('')\n    const [city, setCity] = useState('')\n    const [locality, setLocality] = useState('')\n    const [loading, setLoading] = useState(false)\n    const current = route.params?.current\n    const dispatch = useDispatch()\n\n    console.log(current)\n\n    useEffect(() => {\n        if (current) {\n            getCurrentLoc()\n        }\n    }, [current])\n\n    const getCurrentLoc = async () => {\n        setLoading(true)\n        const loc = await dispatch(getLocation())\n        console.log(loc)\n        const { data } = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${loc.coords?.latitude},${loc.coords?.longitude}&key=${'AIzaSyA_nmZVriBFLHl4ZdmN7d_WVr9PEH2sZa4'}`);\n        console.log(data)\n        if (data.status == 'OK') {\n            setAddress(data.results[0].formatted_address);\n            const letVar = data.results[0].address_components;\n            letVar.forEach(item => {\n                item.types.forEach(qr => {\n                    if (qr === 'locality') {\n                        setLocality(item.long_name);\n                    }\n                    if (qr === 'administrative_area_level_2') {\n                        setCity(item.long_name);\n                    }\n                    if (qr === 'administrative_area_level_1') {\n                        setState(item.long_name);\n                    }\n                    if (qr === 'postal_code') {\n                        setPincode(item.long_name);\n                    }\n                });\n            });\n            setLoading(false);\n        }\n        setLoading(false);\n    }\n\n    const { user_data } = useSelector(state => state.reducer)\n\n    const submit = async () => {\n        if (name.length == 0) {\n            alert(\"Enter a valid name\");\n            return;\n        }\n\n        if (phone.length != 10) {\n            alert(\"Enter a valid mobile number\");\n            return;\n        }\n\n        if (pincode.length != 6) {\n            alert(\"Enter a valid pincode\");\n            return;\n        }\n        if (state.length == 0) {\n            alert(\"Enter a valid state\");\n            return;\n        }\n        if (city.length == 0) {\n            alert(\"Enter a valid city\");\n            return;\n        }\n        if (locality.length == 0) {\n            alert(\"Enter a valid locality\");\n            return;\n        }\n        setLoading(true)\n\n        try {\n            const { data } = await common_axios.post('/useraddress', {\n                user_id: user_data.id,\n                pincode,\n                state,\n                address,\n                city,\n                locality,\n                phone,\n                name\n            });\n            if (data.status == \"1\") {\n                setLoading(false)\n                navigation.goBack(null)\n            }\n        } catch (e) {\n            setLoading(false)\n            console.log(e)\n        }\n    }\n\n    return (\n        <SafeAreaView style={{ backgroundColor: color.primary }}>\n            <Header type=\"back\" title=\"Add new address\" />\n            <View style={{ height: \"100%\", width: \"100%\", paddingHorizontal: 15, paddingVertical: 20, backgroundColor: color.white }}>\n                <ScrollView>\n                    <FloatingLabel\n                        value={name}\n                        style={{ backgroundColor: color.transparent, marginTop: 20, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black }}\n                        label={\"Name\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: color.black, fontSize: 16 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setName(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={phone}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black }}\n                        label={\"Mobile Number\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: color.black, fontSize: 16 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setPhone(value);\n                        }}\n                    />\n                    <View style={{ flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                        <FloatingLabel\n                            value={pincode}\n                            style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black, width: '47%' }}\n                            label={\"Pincode\"}\n                            labelColor={color.black}\n                            inputStyle={{ color: color.black, fontSize: 16 }}\n                            autoCapitalize=\"none\"\n                            onChangeText={(value) => {\n                                setPincode(value);\n                            }}\n                        />\n                        <FloatingLabel\n                            value={state}\n                            style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black, width: '47%' }}\n                            label={\"State\"}\n                            labelColor={color.black}\n                            inputStyle={{ color: color.black, fontSize: 16 }}\n                            autoCapitalize=\"none\"\n                            onChangeText={(value) => {\n                                setState(value);\n                            }}\n                        />\n                    </View>\n                    <FloatingLabel\n                        value={address}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black }}\n                        label={\"Address\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: color.black, fontSize: 16 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setAddress(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={city}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black }}\n                        label={\"City\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: color.black, fontSize: 16 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setCity(value);\n                        }}\n                    />\n                    <FloatingLabel\n                        value={locality}\n                        style={{ backgroundColor: color.transparent, marginTop: 40, borderColor: \"#c4c4c4\", borderRadius: 5, color: color.black }}\n                        label={\"Locality\"}\n                        labelColor={color.black}\n                        inputStyle={{ color: color.black, fontSize: 16 }}\n                        autoCapitalize=\"none\"\n                        onChangeText={(value) => {\n                            setLocality(value);\n                        }}\n                    />\n                    <TouchableOpacity onPress={() => submit()} style={{ justifyContent: 'center', alignItems: 'center', height: 45, backgroundColor: color.primary, borderRadius: 5, marginTop: 30 }}>\n                        {loading ? <ActivityIndicator color={color.white} size={'small'} /> : <Text style={{ fontSize: 16, color: color.white, ...GlobalStyles.dm_sans_bold }}>Submit</Text>}\n                    </TouchableOpacity>\n                </ScrollView>\n            </View>\n        </SafeAreaView>\n    )\n}"]},"metadata":{},"sourceType":"module"}